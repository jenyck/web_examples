///////////////////ДОМАШНЕЕ_ЗАДАНИЕ/////////////////////////////////////////////////////////////////
///////////////////STEP11////////////////////////////////////////////////////////////////////////////
/*
    Задача 1
    Установка пакетов
    Создайте новый проект и установите в него пакет lodash с помощью npm и Yarn.
*/


/*
    Задача 2 Обновление зависимостей
    Добавьте в проект еще несколько пакетов, например axios и react,
    и обновите их до последних версий с помощью npm-check-updates или yarn-upgrade-all.

    Задача 3 Удаление пакетов
    Удалите из проекта пакет react с помощью npm и Yarn.

    Задача 4 Установка пакетов из локального файла
    Создайте локальный файл my-package-1.0.0.tgz, содержащий пакет my-package версии 1.0.0,
    и установите его в проект с помощью npm и Yarn.

    Задача 5 Создание собственного пакета
    Создайте собственный пакет my-package, который будет экспортировать функцию hello(),
    выводящую приветствие на экран. С помощью npm и Yarn опубликуйте этот пакет в общедоступном репозитории.

 */
///////////////////STEP12////////////////////////////////////////////////////////////////////////////

// Установка:
/*
1 Для начала необходимо установить Node.js и npm

(https://nodejs.org) скачиваем установщик для Windows.

Запускаем установщик

Необходимо выбрать компоненты, которые вы хотите установить. Убедитесь, что установлены все компоненты,
включая npm (Node Package Manager), и нажмите на кнопку "Далее".

Выберете место установки На этом экране вам нужно выбрать место, куда будет установлен Node.js.
По умолчанию это папка C:\Program Files\nodejs.
Если вы не хотите менять это, просто нажмите на кнопку "Установить".

Дождитесь завершения установки
После того, как вы нажмете на кнопку "Установить", процесс установки начнется. Дождитесь, пока он завершится.

После завершения установки откройте командную строку и введите команду "node -v".
Если у вас успешно установлен Node.js, вы увидите его версию. Для проверки установки npm введите команду "npm -v".

2 Создайте новую директорию для проекта

3 Инициализируйте проект с помощью npm: npm init
Вы увидите ряд вопросов, на которые нужно будет ответить. Вы можете оставить большинство из них по умолчанию,
но убедитесь, что в поле "entry point" указан путь к файлу, который будет являться точкой входа в ваше приложение.

4 Создайте файл index.js в корне вашей директории проекта
*/

//const message = 'Hello, world!';
console.log(message);

/*
5 Теперь можно запустить наш проект:
node index.js

Вы должны увидеть в консоли сообщение "Hello, world!".






Установка зависимостей с помощью npm
Теперь давайте рассмотрим, как использовать npm для установки и управления зависимостями нашего проекта.

Установите библиотеку Lodash с помощью npm:
npm install lodash
Эта команда установит последнюю версию Lodash и добавит ее в файл package.json в раздел dependencies.
Если вы откроете этот файл, то увидите такую запись:
"dependencies": {
 "lodash": "^4.17.21"
}


Добавьте использование Lodash в файл index.js:
*/

const _ = require('lodash');
const message = 'Hello, world!';
console.log(_.upperCase(message));

// Теперь можно запустить проект и увидеть, что Lodash работает:
// node index.js
// Вы должны увидеть сообщение "HELLO, WORLD!".


/*
Установка зависимостей с помощью Yarn
Yarn — это альтернативный пакетный менеджер для Node.js, созданный Facebook.
Он предлагает некоторые улучшения по сравнению с npm,
включая более быструю установку пакетов и более надежную работу с зависимостями.

Давайте рассмотрим, как использовать Yarn для установки и управления зависимостями.

Установите Yarn на свой компьютер, если он еще не установлен. Вы можете скачать его с официального сайта:
https://classic.yarnpkg.com/en/docs/install/.

Инициализируйте проект с помощью Yarn:
yarn init

Установите библиотеку Lodash с помощью Yarn:
yarn add lodash

Эта команда установит последнюю версию Lodash и добавит ее в файл package.json в раздел dependencies.
Добавьте использование Lodash в файл index.js:

Так же, если в файле package.json уже существуют неустановленные зависимости, их можно установить с помощью команды
yarn add 
*/

const _ = require('lodash');
//const message = 'Hello, world!';
console.log(_.upperCase(message));

// Теперь можно запустить проект и увидеть, что Lodash работает:
// node index.js
// Вы должны увидеть сообщение "HELLO, WORLD!".

/*
Установка конкретной версии зависимости
Часто бывает нужно установить конкретную версию зависимости. Для этого нужно указать версию при установке пакета.

Например, давайте установим версию Lodash 4.17.20:
npm install lodash@4.17.20 или
yarn add lodash@4.17.20
*/