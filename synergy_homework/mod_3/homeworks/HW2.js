///////////////////ДОМАШНЕЕ_ЗАДАНИЕ/////////////////////////////////////////////////////////////////
///////////////////STEP4////////////////////////////////////////////////////////////////////////////

/*
    Задача 1
    Написать функцию, которая принимает объект и возвращает JSON-строку.
*/

/*
    Задача 2
    Написать функцию, которая принимает JSON-строку и возвращает объект.
 */

/*
    Задача 3
    Написать функцию, которая принимает массив объектов и возвращает JSON-строку с массивом объектов.
 */

/*
    Задача 4
    Написать функцию, которая принимает JSON-строку с массивом объектов и возвращает массив объектов.
 */

/*
    Задача 5.

    Написать функцию, которая принимает объект с вложенными объектами и массивами, и возвращает JSON-строку.



    Чтобы решить задачу, нужно написать функцию, которая принимает объект person и преобразует его в JSON-строку.
    Воспользуемся методом JSON.stringify() и передадим его вторым параметром функцию replacer.

*/

///////////////////STEP5////////////////////////////////////////////////////////////////////////////

/*
   Задача 1: Деструктуризация объекта
   Создайте объект person со следующими свойствами:

   const person = {
    name: "Ivan",
    age: 30,
    address: {
        city: "Moscow",
        country: "Russia"
  }
};

 */

/*
    С помощью деструктуризации извлеките свойства name и age в переменные name и age соответственно.
    Затем извлеките свойство city в переменную city.
 */

/*
    Задача 2: Деструктуризация массива
    Создайте массив numbers со следующими элементами:

    const numbers = [1, 2, 3, 4, 5];

    С помощью деструктуризации извлеките первый и третий элементы в переменные first и third.
 */

/*
    Задача 3: Деструктуризация в функции
    Создайте функцию printPerson,
    которая принимает объект person со свойствами name, age и address в качестве параметра.
    Используя деструктуризацию, извлеките свойства name, age и address внутри функции.
    Затем используйте эти свойства для вывода строки в консоль.
 */

/*
    Задача 4: Деструктуризация с параметрами по умолчанию
    Создайте функцию calculate, которая принимает объект с двумя свойствами x и y в качестве параметра.
    Используя деструктуризацию, извлеките свойства x и y внутри функции. Затем вычислите и верните сумму x и y.
    Если свойства x и y не определены в объекте, установите их значение по умолчанию в 0.
 */

/*
    Задача 5: Деструктуризация и переименование
    Создайте объект person со следующими свойствами:
 */
